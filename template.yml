#Required
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Globals:
  Function:
    Runtime: nodejs12.x
    MemorySize: 128
    Timeout: 600
    Environment:
      Variables:
        TABLE_NAME: fiap-trips
Resources: 
  dynamodb:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: fiap-trips
      AttributeDefinitions:
        - AttributeName: "PK"
          AttributeType: "S"
        - AttributeName: "SK"
          AttributeType: "S"
        - AttributeName: "Type"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "PK"
          KeyType: "HASH"
        - AttributeName: "SK"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      GlobalSecondaryIndexes:
        -
          IndexName: "SK-index"
          KeySchema:
            - AttributeName: "SK"
              KeyType: "HASH"
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
          Projection: 
            ProjectionType: "ALL"
        -
          IndexName: "Type-index"
          KeySchema:
            - AttributeName: "Type"
              KeyType: "HASH"
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
          Projection: 
            ProjectionType: "ALL"

  saveTrip:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/index.saveTrip
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /trip
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref dynamodb
  listAllTrips:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/index.listAllTrips
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /trip
            Method: get
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref dynamodb
  listAllCities:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/index.listAllCities
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /city
            Method: get
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref dynamodb
  listAllCountries:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/index.listAllCountries
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /country
            Method: get
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref dynamodb
  listTripsByCountry:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/index.listTripsByCountry
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /trip/{countryId}
            Method: get
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref dynamodb
  listTripsByCountryAndCity:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/index.listTripsByCountryAndCity
      Events:
        apiForLambda:
          Type: Api 
          Properties:
            Path: /trip/{countryId}/{cityId}
            Method: get
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref dynamodb


